---
name: Docker

on: push

env:
  METADATA_FILE: metadata.json
  DOCKERFILE: ./Dockerfile

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Git SHA
        run: |
          GIT_SHA=$(echo "${GITHUB_SHA: -8}")
          echo "${GIT_SHA}"
          echo "GIT_SHA=${GIT_SHA}" >> $GITHUB_ENV
      - name: Get Date
        run: |
          DATE=$(date +"%Y%m%d")
          echo "${DATE}"
          echo "DATE=${DATE}" >> $GITHUB_ENV
      - name: Get Image Name
        run: |
          IMAGE_NAME=$(jq -r .image_name ${{ env.METADATA_FILE }})
          echo "${IMAGE_NAME}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
      - name: Get Version
        run: |
          VERSION=$(jq -r .version ${{ env.METADATA_FILE }})
          echo "${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Bump version and push tag
        if: ${{ github.ref == 'refs/heads/main' }}
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.3
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          custom_tag: ${{ env.DATE }}-${{ env.GIT_SHA }}
          tag_prefix: ''
      - name: Create a GitHub release
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create Docker Meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE_NAME }}
          tag-custom: |
            ${{ env.VERSION }}
            ${{ env.VERSION }}-${{ env.DATE }}
      - name: Docker Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.VERSION }}
      - name: Run Snyk
        #if: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.IMAGE_NAME }}
          args: --file=${{ env.DOCKERFILE }}
      - name: Upload result to GitHub Code Scanning
        #if: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
